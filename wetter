#!/usr/bin/env ruby

require 'rubygems'
require 'commander/import'

program :name, 'ada-wetter'
program :version, '0.0.1'
program :description, 'Delivers weather related data'

command :from do |c|
  c.syntax = 'ada-wetter from [options]'
  c.summary = ''
  c.description = ''
  c.example 'description', 'command example'
  c.option '--some-switch', 'Some switch that does something'
  c.action do |args, options|
    # Do something or c.when_called Ada-wetter::Commands::From
  end
end

command :both do |c|
  c.syntax = 'ada-wetter both [options]'
  c.summary = ''
  c.description = ''
  c.example 'description', 'command example'
  c.option '--some-switch', 'Some switch that does something'
  c.action do |args, options|
    # Do something or c.when_called Ada-wetter::Commands::Both
  end
end

command :the do |c|
  c.syntax = 'ada-wetter the [options]'
  c.summary = ''
  c.description = ''
  c.example 'description', 'command example'
  c.option '--some-switch', 'Some switch that does something'
  c.action do |args, options|
    # Do something or c.when_called Ada-wetter::Commands::The
  end
end

command :Dark do |c|
  c.syntax = 'ada-wetter Dark [options]'
  c.summary = ''
  c.description = ''
  c.example 'description', 'command example'
  c.option '--some-switch', 'Some switch that does something'
  c.action do |args, options|
    # Do something or c.when_called Ada-wetter::Commands::Dark
  end
end

command :Sky do |c|
  c.syntax = 'ada-wetter Sky [options]'
  c.summary = ''
  c.description = ''
  c.example 'description', 'command example'
  c.option '--some-switch', 'Some switch that does something'
  c.action do |args, options|
    # Do something or c.when_called Ada-wetter::Commands::Sky
  end
end

command :API do |c|
  c.syntax = 'ada-wetter API [options]'
  c.summary = ''
  c.description = ''
  c.example 'description', 'command example'
  c.option '--some-switch', 'Some switch that does something'
  c.action do |args, options|
    # Do something or c.when_called Ada-wetter::Commands::Api
  end
end

command :and do |c|
  c.syntax = 'ada-wetter and [options]'
  c.summary = ''
  c.description = ''
  c.example 'description', 'command example'
  c.option '--some-switch', 'Some switch that does something'
  c.action do |args, options|
    # Do something or c.when_called Ada-wetter::Commands::And
  end
end

command :sensors do |c|
  c.syntax = 'ada-wetter sensors [options]'
  c.summary = ''
  c.description = ''
  c.example 'description', 'command example'
  c.option '--some-switch', 'Some switch that does something'
  c.action do |args, options|
    # Do something or c.when_called Ada-wetter::Commands::Sensors
  end
end

command :within do |c|
  c.syntax = 'ada-wetter within [options]'
  c.summary = ''
  c.description = ''
  c.example 'description', 'command example'
  c.option '--some-switch', 'Some switch that does something'
  c.action do |args, options|
    # Do something or c.when_called Ada-wetter::Commands::Within
  end
end

command :your do |c|
  c.syntax = 'ada-wetter your [options]'
  c.summary = ''
  c.description = ''
  c.example 'description', 'command example'
  c.option '--some-switch', 'Some switch that does something'
  c.action do |args, options|
    # Do something or c.when_called Ada-wetter::Commands::Your
  end
end

command :home. do |c|
  c.syntax = 'ada-wetter home. [options]'
  c.summary = ''
  c.description = ''
  c.example 'description', 'command example'
  c.option '--some-switch', 'Some switch that does something'
  c.action do |args, options|
    # Do something or c.when_called Ada-wetter::Commands::Home.
  end
end

